version: '3'
services:

#Nginx Service
  webserver:
    image: nginx:alpine
    container_name: "${PREFIX}webserver"
    restart: unless-stopped
    tty: true
    ports:
      - "${WWW_PORT}:80"
      - "${WWW_SECURITY_PORT}:443"
    volumes:
      - ./www:/var/www
      - ./config/nginx/:/etc/nginx/conf.d/
      - ./config/nginx/:/etc/nginx/sites-available/
      - ./config/nginx/:/etc/nginx/sites-enabled/
      - ./scripts:/bin/app
    networks:
      - openweb-network

#PHP
  php:
    build:
      context: "./image/php/${PHP_VERSION}/."
    image: "openweb/php:${PHP_VERSION}"
    container_name: "${PREFIX}php"
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./www:/var/www
      - ./config/php/php.ini:/usr/local/etc/php/php.ini
      - ./scripts:/bin/app
    networks:
      openweb-network:
        aliases:
          - php

  #NODE.js
  node:
    image: "node:${NODE_VERSION}"
    container_name: "${PREFIX}node"
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - ./www:/var/www
      - ./scripts:/bin/app
    networks:
      - openweb-network

  #MySQL Service
  mysql:
    image: mysql:8.0.13
    container_name: "${PREFIX}mysql"
    restart: unless-stopped
    tty: true
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ./db/mysql:/var/lib/mysql
      - ./scripts:/bin/app
    environment:
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_PASSWORD}"
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - openweb-network

#Bash Service
  bash:
    image: ubuntu:latest
    container_name: "${PREFIX}bash"
    restart: unless-stopped
    tty: true
    ports:
      - "${BASH_PORT}:4000"
    volumes:
      - ./scripts:/bin/app
    networks:
      - openweb-network

#Docker Networks
networks:
  openweb-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
